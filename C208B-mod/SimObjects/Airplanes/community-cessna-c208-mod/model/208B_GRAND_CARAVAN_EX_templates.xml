<?xml version="1.0" encoding="UTF-8"?>
<ModelBehaviors>

	<Template Name="ASOBO_SYSTEM_Electric_Template_Mod">
		<Component ID="#PART_ID#">
			<UseInputEvent ID="PROCEDURE">
				<PROCEDURE_ID>AUTOSTART</PROCEDURE_ID>
				<ON_AUTOSTART>
					1 (&gt;O:Autostart_procedure)
					1 (&gt;L:ENG FUEL VALVE:1)
					1 (&gt;B:ELECTRICAL_Power_Bus_Switch_Set)
					  (&gt;B:ELECTRICAL_Avionics_Bus_1_On)
					1 (&gt;B:LIGHTING_BEACON_1_Set)
					  (&gt;B:FUEL_Selector_1_Left)
					  (&gt;B:FUEL_Selector_2_Right)
					1 (&gt;B:FUEL_1_condition_lever_Set)
					  (&gt;B:FUEL_Pump_1_On)
					1 (&gt;B:ENGINE_Propeller_Lever_Set)
					  (&gt;B:ENGINE_Throttle_1_Idle)
					0 (&gt;B:ENGINE_Starter_Switch_Set)
				</ON_AUTOSTART>
				<ON_AUTOSTOP>
					1 (&gt;O:Autostart_procedure)
					  (&gt;B:FUEL_Pump_1_Off)
					2 (&gt;B:FUEL_1_condition_lever_Set)
					  (&gt;B:FUEL_Selector_1_Off)
					  (&gt;B:FUEL_Selector_2_Off)
					  (&gt;B:ENGINE_Throttle_1_Idle)
				-0.25 (&gt;B:ENGINE_Propeller_Lever_Set)
				</ON_AUTOSTOP>
				<ON_COMBUSTION_STATE_CHANGED>
					(O:Autostart_procedure, Bool) if{ if{
						1 (&gt;B:ENGINE_Starter_Switch_Set)
						0 (&gt;B:FUEL_1_condition_lever_Set)
						1 (&gt;B:ELECTRICAL_Stby_Alternator_Switch_Set)
						  (&gt;B:FUEL_Pump_1_Auto)
						  (&gt;B:ELECTRICAL_Avionics_Bus_2_On)
						(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) ! if{ 2 (&gt;K:TOGGLE_MASTER_ALTERNATOR) }
					} els{
						(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) if{ 2 (&gt;K:TOGGLE_MASTER_ALTERNATOR) }
						  (&gt;B:ELECTRICAL_Avionics_Bus_1_Off)
						  (&gt;B:ELECTRICAL_Avionics_Bus_2_Off)
						0 (&gt;B:LIGHTING_BEACON_1_Set)
						0 (&gt;B:ELECTRICAL_Stby_Alternator_Switch_Set)
						0 (&gt;B:ELECTRICAL_Power_Bus_Switch_Set) }
					0 (&gt;O:Autostart_procedure) }
				</ON_COMBUSTION_STATE_CHANGED>
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_CODE>
					1 0 (A:ELECTRICAL MAIN BUS VOLTAGE:1, volts) 5 &gt; ? (&gt;L:XMLVAR_Power_Distr_Bus)

					(A:ELECTRICAL BATTERY LOAD:#MASTER_BATTERY_ID#, amps) d 0 &lt; if{
						(A:ELECTRICAL BATTERY ESTIMATED CAPACITY PCT:#MASTER_BATTERY_ID#, percent) s12 10 div sp0
						:0	0 -3 -6 -10 -15 -21 -28 -36 -45 -55 -67 11
						l0 case sp1 l12 10 / l0 - s2 0 &gt; if{ l1 sp11 l0 ++ sp0 l2 sp10 g0 }
						l2 0 == if{ l1 } els{ l11 l10 l1 l11 - * + } max
					} neg s0 d (&gt;L:XMLVAR_Battery_Current) 0 &lt;= if{ 0 sp0 } 

					(A:TURB ENG N1:1, percent) 46 &gt; (A:ELECTRICAL GENALT BUS AMPS:1, amps) s1 0 &gt; and s3
					(A:TURB ENG N1:1, percent) 46 &gt; (A:ELECTRICAL GENALT BUS AMPS:2, amps) s2 0 &gt; and s4
					and if{ l0 2 / sp0 }
					l3 if{ l1 l0 + } els{ 0 } (&gt;L:XMLVAR_Generator_Current)
					l4 if{ l2 l0 + } els{ 0 } (&gt;L:XMLVAR_Alternator_Current)
				</UPDATE_CODE>
	        </UseTemplate>	
		</Component>
	</Template>

	<macro Name="is_pump1_circuit_on">(A:CIRCUIT ON:#CIRCUIT_DEICE_PUMP1#, bool)</macro>
	<macro Name="is_pump1_switch_on">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP1#, bool)</macro>
	<macro Name="Enable_deice_pump1">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP1#, bool) ! if{ #CIRCUIT_DEICE_PUMP1# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</macro>
	<macro Name="Disable_deice_pump1">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP1#,bool) if{ #CIRCUIT_DEICE_PUMP1# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</macro>
	<macro Name="is_pump2_circuit_on">(A:CIRCUIT ON:#CIRCUIT_DEICE_PUMP2#, bool)</macro>
	<macro Name="is_pump2_switch_on">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP2#, bool)</macro>
	<macro Name="Enable_deice_pump2">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP2#, bool) ! if{ #CIRCUIT_DEICE_PUMP2# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</macro>
	<macro Name="Disable_deice_pump2">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP2#, bool) if{ #CIRCUIT_DEICE_PUMP2# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</macro>
	<macro Name="is_pump3_circuit_on">(A:CIRCUIT ON:#CIRCUIT_DEICE_PUMP3#, bool)</macro>
	<macro Name="is_pump3_switch_on">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP3#, bool)</macro>
	<macro Name="Enable_deice_pump3">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP3#, bool) ! if{ #CIRCUIT_DEICE_PUMP3# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</macro>
	<macro Name="Disable_deice_pump3">(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_PUMP3#,bool) if{ #CIRCUIT_DEICE_PUMP3# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) } </macro>

	<Template Name="ASOBO_SYSTEM_AntiIce_Template_Mod">
		<Parameters Type="Default">
			<!-- Anti ice fluid usage in gal/s -->
			<USE_RATE_MAX>0.0086666666666667</USE_RATE_MAX>
			<USE_RATE_HIGH>0.0043333333333333</USE_RATE_HIGH>
			<USE_RATE_NORMAL>0.0016910569105691</USE_RATE_NORMAL>
			<USE_RATE_WINDSHIELD>0.0016910569105691</USE_RATE_WINDSHIELD>
			<WINDSHIELD_ON_TIME>120</WINDSHIELD_ON_TIME>
			<PUMP_MAXFLOW_TIME>120</PUMP_MAXFLOW_TIME>
			<PUMP_ON_TIME>10</PUMP_ON_TIME>
			<PUMP_OFF_TIME>5</PUMP_OFF_TIME>
			<CIRCUIT_DEICE_PUMP1>53</CIRCUIT_DEICE_PUMP1>
			<CIRCUIT_DEICE_PUMP2>54</CIRCUIT_DEICE_PUMP2>
			<CIRCUIT_DEICE_PUMP3>55</CIRCUIT_DEICE_PUMP3>
			<CIRCUIT_DEICE_STALL_HEATER>56</CIRCUIT_DEICE_STALL_HEATER>
		</Parameters>
		<Component ID="#PART_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>DEICE_System</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Controller</IE_NAME>
				<STATE_WINDSHIELD>5</STATE_WINDSHIELD>
				<STATE_MAXFLOW>4</STATE_MAXFLOW>
				<STATE_BACKUP>3</STATE_BACKUP>
				<STATE_HIGH>2</STATE_HIGH>
				<STATE_NORM>1</STATE_NORM>
				<STATE_OFF>0</STATE_OFF>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>3</FREQUENCY>
				<UPDATE_CODE>
					(L:XMLVAR_Deice_Stall_Sensor_Ionp) if{ (O:False_Stall_Warning) } els{ (A:STALL WARNING, Bool) }
					(A:CIRCUIT GENERAL PANEL ON:1, Bool) and (&gt;L:XMLVAR_Stall_Warning)
				</UPDATE_CODE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_CODE>
					(A:CIRCUIT ON:#CIRCUIT_DEICE_STALL_HEATER#, Bool) if{
						(O:StallSensorIce) 3 - 0 max (&gt;O:StallSensorIce)
					} els{ (L:XMLVAR_HighIcingCondition) if{
							(O:StallSensorIce) 5 + 360 min (&gt;O:StallSensorIce)
							(L:XMLVAR_Deice_Stall_Sensor_Ionp) ! if{
								(O:StallSensorIce) 300 &gt; if{					
									1 (&gt;L:XMLVAR_Deice_Stall_Sensor_Ionp)
									1 0 rand 0.5 &gt; ? (&gt;O:False_Stall_Warning)
								}
							}
							quit
						} els{ (O:StallSensorIce) (A:AMBIENT TEMPERATURE, celsius) 10 / ceil - 0 max (&gt;O:StallSensorIce) }
					}
					(L:XMLVAR_Deice_Stall_Sensor_Ionp) if{
						(O:StallSensorIce) 240 &lt; if{
							0 (&gt;L:XMLVAR_Deice_Stall_Sensor_Ionp)
							(A:STALL WARNING, Bool) (&gt;L:XMLVAR_Stall_Warning)
						}
					}
				</UPDATE_CODE>
			</UseTemplate>
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_CODE>
					(A:AMBIENT TEMPERATURE, celsius) s0 0 &gt; l0 -15 &lt; or if{ 0 g0 }
					l0 23.5 (A:PRESSURE ALTITUDE, feet) 500 / - &gt; if{ 0 g0 }
					(A:AMBIENT IN CLOUD, bool) ! (A:AMBIENT PRECIP RATE, millimeters of water) 5 &lt; and if{ 0 g0 }
					1 :0 (&gt;L:XMLVAR_HighIcingCondition)

					(O:DeicePumpState) #STATE_OFF# == if{ quit }

					(L:XMLVAR_Aice_Fluid_Level) s0 0 == if{ 
						(A:STRUCTURAL DEICE SWITCH, bool) if{ (&gt;K:TOGGLE_STRUCTURAL_DEICE) }
						0 (&gt;K:WINDSHIELD_DEICE_SET) quit
					 }

					(E:SIMULATION TIME, second) s10
					0 l0 (O:DeiceFluidFlow) 0 @is_pump1_circuit_on @is_pump2_circuit_on or ?
					#USE_RATE_WINDSHIELD# 0 @is_pump3_circuit_on ? +
					l10 (O:LastUpdateTime) - * - max (&gt;L:XMLVAR_Aice_Fluid_Level)
					(&gt;O:LastUpdateTime)

					(O:DeiceWindshieldState) if{
						l10 (O:WindshieldPumpStarted) #WINDSHIELD_ON_TIME# + &gt; if{
							@Disable_deice_pump3
							0 (&gt;O:DeiceWindshieldState)
						}
					}

					(O:DeicePumpState) #STATE_MAXFLOW# == if{
						l10 (O:MaxFlowPumpStarted) #PUMP_MAXFLOW_TIME# + &gt; if{ 
							(L:XMLVAR_Deice_Airframe, enum) d (&gt;O:DeicePumpState)
							#STATE_HIGH# == if{ #USE_RATE_HIGH# (&gt;O:DeiceFluidFlow) } 
											els{ #USE_RATE_NORMAL# (&gt;O:DeiceFluidFlow) 
											0 #CIRCUIT_DEICE_PUMP1# (&gt;K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) }
							g11
						}
						quit
					} 

					(O:DeiceCycleState) if{
						l10 (O:LastCycleStateChange) #PUMP_ON_TIME# + &gt; if{
:11							(O:DeicePumpState) #STATE_BACKUP# == if{ @Disable_deice_pump2 }
																els{ @Disable_deice_pump1 }
							0 (&gt;O:DeiceCycleState)
							l10 (&gt;O:LastCycleStateChange)
						}
					} els{
						l10 (O:LastCycleStateChange) #PUMP_OFF_TIME# + &gt; if{
							(O:DeicePumpState) #STATE_BACKUP# == if{ @Enable_deice_pump2 }
																els{ @Enable_deice_pump1 }
							1 (&gt;O:DeiceCycleState)
							l10 (&gt;O:LastCycleStateChange)
						}
					}

					(O:DeicePumpState) #STATE_NORM# == (L:XMLVAR_HighIcingCondition) and ! @is_pump1_circuit_on and
					(O:DeicePumpState) #STATE_BACKUP# == @is_pump2_circuit_on and or
					(A:STRUCTURAL DEICE SWITCH, bool) != if{ (&gt;K:TOGGLE_STRUCTURAL_DEICE) }
					@is_pump3_circuit_on (&gt;K:WINDSHIELD_DEICE_SET)
				</UPDATE_CODE>
			</UseTemplate>
   		</Component>
	</Template>	

	<Template Name="ASOBO_ENGINE_MetalChipDetector_Template_Mod">
		<Parameters Type="Default">
			<ENGINE_MAX_TORQUE>2397</ENGINE_MAX_TORQUE> <!-- max torque above which engine is overstressed -->
			<ENGINE_RESISTANCE_TIME>240</ENGINE_RESISTANCE_TIME> <!-- 4 minutes of the engine overstress is without penalty -->
			<MAX_PROBABILITY>0.125</MAX_PROBABILITY> <!-- max probability of engine failure in one second -->
			<TIME_CONST>1000</TIME_CONST>  <!-- Number of seconds after which the overstress causes max engine failure probability -->
		</Parameters>
		<Component ID="#PART_ID#">
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_CODE>
					(A:ENG FAILED:1, Bool) ! if{
						(A:PRESSURE ALTITUDE, feet) s12 0 &lt; if{ 0 s12 s0 } els{ l12 2000 div s0 }
						:0	-54 -54 -54 -54 -54 -54 -40 -22 -8 2 14 24 32 13
						l0 case sp1 
						1510 1640 1800 1980 2160 2350 2397 2397 2397 2397 2397 2397 2397 13
						l0 case sp2 
	                       -7.5 -7.83333333 -9.0625 -10.1470588 -11.111111 -11.9736842 -13.1363636 -14.75 -16.5952381 -17.13888889 -19.1785714 -20.7727273 -20.9444444 13
						l0 case sp3 

						(A:AMBIENT TEMPERATURE, celsius) l1 - l3 * l2 +
						l12 l0 2000 * - s1 0 >= if{ l1 sp13 l0 ++ sp0 s10 g0 }
						l10 - l13 2000 / * + sp10
						l10 #ENGINE_MAX_TORQUE# &gt; if{ #ENGINE_MAX_TORQUE# sp10 }
						l10 (&gt;L:XMLVAR_EngineMaxTorque)

						(A:TURB ENG FREE TURBINE TORQUE:1, Foot Pounds) #ENGINE_MAX_TORQUE# &gt; if{
							(L:XMLVAR_ChipDetectTimer) 1 + s0 (&gt;L:XMLVAR_ChipDetectTimer)
							l0 #ENGINE_RESISTANCE_TIME# &gt; l0 #TIME_CONST# &lt;= and if{
								#MAX_PROBABILITY# #TIME_CONST# l0 - / (&gt;O:EngineFailureProb) } } 
						rand (O:EngineFailureProb) &lt; if{ (&gt;K:TOGGLE_ENGINE1_FAILURE) } }		
				</UPDATE_CODE>
			</UseTemplate>
   		</Component>
	</Template>	

	<Template Name="ASOBO_ELECTRICAL_Switch_Battery_Master_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ELECTRICAL_Power_Bus</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.ELECTRICAL_BATTERY_MASTER_ACTION_SET</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#) 1 == if{ @TT_On } els{ @TT_Off }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>PUSH</TT_ICON>
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_CODE>(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_Toggle)</LEFT_SINGLE_CODE>
   	            <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_BATTERY_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>		
	</Template>	

	<Template Name="ASOBO_ELECTRICAL_Switch_Alternator_Template_Mod">
		<Parameters Type="Default">
			<GEN_ID>1</GEN_ID>
		</Parameters>

		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ELECTRICAL_Generator</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>

			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.ELECTRICAL_ALTERNATOR_ACTION_SET_SOLO</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>
					(A:GENERAL ENG MASTER ALTERNATOR:#GEN_ID#, bool)
					s0 0 == if{ (R:1:@TT_Package.GT_STATE_TRIP) @sprintf quit }
					l0 1 == if{ (R:1:@TT_Package.GT_STATE_ON) @sprintf quit }
				</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>

            <UseTemplate Name="ASOBO_GT_Switch_3States">
                <MOMENTARY_SWITCH/>
   	            <STATE_MAX_TIMER>0.5</STATE_MAX_TIMER>
       	        <STATE0_TIMER>0.5</STATE0_TIMER>

				<CODE_POS_0>(*RESET*) (A:GENERAL ENG MASTER ALTERNATOR:#GEN_ID#, bool) ! if{ (&gt;K:TOGGLE_ALTERNATOR#GEN_ID#) } </CODE_POS_0>
				<CODE_POS_1>(* ON  *) </CODE_POS_1>
				<CODE_POS_2>(*TRIP *) (A:GENERAL ENG MASTER ALTERNATOR:#GEN_ID#, bool) if{ (&gt;K:TOGGLE_ALTERNATOR#GEN_ID#) } </CODE_POS_2>

				<WWISE_EVENT>alternator_switch</WWISE_EVENT>
				<AUDIO_DIRECTION>Both</AUDIO_DIRECTION>
				<NORMALIZED_TIME>0.1</NORMALIZED_TIME>

   	            <TOOLTIP_TITLE>@TT_Package.ELECTRICAL_ALTERNATOR_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	
    
	<Template Name="ASOBO_ENGINE_Switch_Starter_Template_Mod">
		<Parameters Type="Default">
			<ENGINE_ID>1</ENGINE_ID>
			<POWER_BUS_ID>1</POWER_BUS_ID>
			<STARTER_CIRCUIT>11</STARTER_CIRCUIT>
			<ANIM_EVENT_EFFECT_NAME>CAM_ENGINE_START</ANIM_EVENT_EFFECT_NAME>
			<DIRECTION>Forward</DIRECTION>
		</Parameters>
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ENGINE_Starter</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
				<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>XMLVAR_Starter#ENGINE_ID#</SWITCH_POSITION_VAR>
				<STATE_START>0</STATE_START>
				<STATE_OFF>1</STATE_OFF>
				<STATE_MOTOR>2</STATE_MOTOR>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.ENGINE_STARTER_ACTION_SET_1ENG</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>
					(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#, enum)
					s0 #STATE_START# == if{ (R:1:@TT_Package.GT_STATE_START) quit }
					l0 #STATE_OFF# == if{ @TT_Off quit }
					l0 #STATE_MOTOR# == if{ (R:1:@TT_Package.GT_STATE_MOTOR) quit }
				</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
    			<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
            <UseTemplate Name="ASOBO_GT_Switch_3States">
                <MOMENTARY_SWITCH/>
   	            <STATE_MAX_TIMER>0.5</STATE_MAX_TIMER>
       	        <STATE0_TIMER>0</STATE0_TIMER>

				<CODE_POS_0>(*STARTER*) #STATE_START# (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_set)</CODE_POS_0>
				<CODE_POS_1>(*  OFF  *) #STATE_OFF# (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_set)</CODE_POS_1>
				<CODE_POS_2>(* MOTOR *) #STATE_MOTOR# (&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_set)</CODE_POS_2>

				<WWISE_EVENT>button_switch_generic</WWISE_EVENT>
				<NORMALIZED_TIME>0.01</NORMALIZED_TIME>
				<AUDIO_DIRECTION>Both</AUDIO_DIRECTION>

				<TOOLTIP_TITLE>@TT_Package.ENGINE_STARTER_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_ENGINE_Switch_Ignition_Template_Mod">
		<Parameters Type="Default">
			<ENGINE_ID>1</ENGINE_ID>
		</Parameters>

		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ENGINE_Ignition</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
				<SWITCH_POSITION_TYPE>O</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>XMLVAR_Ignition#ENGINE_ID#</SWITCH_POSITION_VAR>
				<STARTER_SWITCH_LOCAL_VAR>XMLVAR_Starter#ENGINE_ID#</STARTER_SWITCH_LOCAL_VAR>
			</Parameters>

			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.ENGINE_IGNITION_ACTION_SET_1ENG</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#, Bool) if{ @TT_On } els{ @TT_Norm }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>PUSH</TT_ICON>
			</UseInputEvent>

			<UseTemplate Name="ASOBO_GT_Switch_Code">
	  			<ANIM_CODE>(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#, Bool) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_Toggle)</LEFT_SINGLE_CODE>

				<WWISE_EVENT_1>engine_ignition_switch_off</WWISE_EVENT_1>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>engine_ignition_switch_on</WWISE_EVENT_2>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>

				<TOOLTIP_TITLE>@TT_Package.ENGINE_IGNITION_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>

		</Component>
	</Template>

	<Template Name="ASOBO_ELECTRICAL_Switch_Alternator_STBY_Template_Mod">
		<Parameters Type="Default">
			<!-- min N1  which activates ACU. Below it the stby alternator is disconnected -->
			<ENG_N1_THREASHOLD>46</ENG_N1_THREASHOLD>
			<!-- generator utilisation margin which activates stby alternator -->
			<!-- right now aircraft current consumption will not trigger stby alternator unless the main gen is tripped -->
			<GEN_CURRENT>100</GEN_CURRENT>
		</Parameters>

		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ELECTRICAL_Stby_Alternator</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>

			<UseTemplate Name="ASOBO_GT_Update">
				<FREQUENCY>5</FREQUENCY>
				<UPDATE_CODE>
				    #ENG_N1_THREASHOLD# (A:TURB ENG N1:1, percent) &lt; #GEN_CURRENT# (A:ELECTRICAL MAIN BUS AMPS, amps) &gt; and if{
						#STBY_ALT_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR CONNECTION ON:#ALT_ID#, Bool) ! if{
							#ALT_ID# #STBY_ALT_BUS_ID# (&gt;K:2:ELECTRICAL_BUS_TO_ALTERNATOR_CONNECTION_TOGGLE) }
					} els{
						#STBY_ALT_BUS_ID# (&gt;A:BUS LOOKUP INDEX, Number) (A:ALTERNATOR CONNECTION ON:#ALT_ID#, Bool) if{
   							#ALT_ID# #STBY_ALT_BUS_ID# (&gt;K:2:ELECTRICAL_BUS_TO_ALTERNATOR_CONNECTION_TOGGLE) }
					}			
				</UPDATE_CODE>
			</UseTemplate>

			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.ELECTRICAL_ALTERNATOR_STANBY_ACTION_SET</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(A:GENERAL ENG MASTER ALTERNATOR:#ALT_ID#, Bool) 1 == if{ @TT_On } els{ @TT_Off }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>PUSH</TT_ICON>
			</UseInputEvent>

			<UseTemplate Name="ASOBO_GT_Switch_Code">
	  			<ANIM_CODE>(A:GENERAL ENG MASTER ALTERNATOR:#ALT_ID#, Bool) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>#ALT_ID# (&gt;K:TOGGLE_MASTER_ALTERNATOR)</LEFT_SINGLE_CODE>

   				<WWISE_EVENT_1>alternator_switch_on</WWISE_EVENT_1>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>alternator_switch_off</WWISE_EVENT_2>
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

				<TOOLTIP_TITLE>@TT_Package.ELECTRICAL_ALTERNATOR_STANBY_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>

		<Component ID="#LIGHT_PART_ID#" Node="#LIGHT_NODE_ID#">
			<Parameters Type="Default">
				<DEFAULT_EMISSIVE>5</DEFAULT_EMISSIVE>
				<DONT_OVERRIDE_BASE_EMISSIVE>True</DONT_OVERRIDE_BASE_EMISSIVE>
				<FAILURE>(A:ELECTRICAL BATTERY ESTIMATED CAPACITY PCT:#MASTER_BATTERY_ID#, percent over 100) 10 * 1 min</FAILURE>
			</Parameters>
			<UseTemplate Name="ASOBO_GT_Emissive_Gauge">
				<EMISSIVE_CODE>(B:ELECTRICAL_Power_Bus_Switch, bool) ! (A:GENERAL ENG MASTER ALTERNATOR:#ALT_ID#, bool) * #DEFAULT_EMISSIVE# *</EMISSIVE_CODE>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_ELECTRICAL_Switch_ExternalPower_Template_Mod">
		<Parameters Type="Default">
   			<COVER_NODE_ID>#NODE_ID#_Cover</COVER_NODE_ID>
   			<COVER_ANIM_NAME>#ANIM_NAME#_Cover</COVER_ANIM_NAME>
   			<GET_STATE_EXTERNAL>
				12 (&gt;A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:1, Bool) sp1
				12 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:11, Bool) sp2
				1 (&gt;A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:11, Bool) sp3
   			</GET_STATE_EXTERNAL>
   			<SET_EXTPWR_MAIN_BUS_CONNECTION>l1 != if{ 1 12 (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }</SET_EXTPWR_MAIN_BUS_CONNECTION>
   			<SET_EXTPWR_STARTER_CONNECTION>l2 != if{ 11 12 (&gt;K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }</SET_EXTPWR_STARTER_CONNECTION>
   			<SET_STARTER_MAIN_BUS_CONNECTION>l3 != if{ 11 1 (&gt;K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }</SET_STARTER_MAIN_BUS_CONNECTION>
		</Parameters>
		<Parameters Type="Override">
			<SWITCH_NODE_ID>#NODE_ID#</SWITCH_NODE_ID>
   			<SWITCH_ANIM_NAME>#ANIM_NAME#</SWITCH_ANIM_NAME>
   			<COVER_VAR_NAME>XMLVAR_ELECTRICAL_ExternalPower_#ID#_Cover_Opened</COVER_VAR_NAME>
   			<WWISE_EVENT>externalpower_switch</WWISE_EVENT>
   			<BTN_ID>ExternalPower_#ID#</BTN_ID>
   		</Parameters>
		<Component ID="ELECTRICAL_ExternalPower">
   			<UseTemplate Name="ASOBO_GT_Switch_Covered">
   				<NUM_STATES>3</NUM_STATES>
   				<INPUT_EVENT_ID>ELECTRICAL</INPUT_EVENT_ID>
   				<COVER_IE_NAME>#BTN_ID#_Cover</COVER_IE_NAME>
   				<COVER_IE_ID_SOURCE>ELECTRICAL</COVER_IE_ID_SOURCE>
   				<CODE_POS_0>(&gt;B:ELECTRICAL_#BTN_ID#_Bus)</CODE_POS_0>
   				<CODE_POS_1>(&gt;B:ELECTRICAL_#BTN_ID#_Starter)</CODE_POS_1>
   				<CODE_POS_2>(&gt;B:ELECTRICAL_#BTN_ID#_Off)</CODE_POS_2>
   				<STATE0_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 0 ==</STATE0_TEST>
   				<STATE1_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 1 ==</STATE1_TEST>
   				<STATE2_TEST>(B:ELECTRICAL_#BTN_ID#, Number) 2 ==</STATE2_TEST>
   				<STR_STATE_0>Bus</STR_STATE_0>
   				<STR_STATE_1>Starter</STR_STATE_1>
   				<STR_STATE_2>Off</STR_STATE_2>
   				<TT_VALUE_0>@TT_Package.GT_STATE_BUS</TT_VALUE_0>
   				<TT_VALUE_1>@TT_Package.GT_STATE_STARTER</TT_VALUE_1>
   				<TT_VALUE_2>@TT_Package.GT_STATE_OFF</TT_VALUE_2>
   				<SET_STATE_0>
   					(A:EXTERNAL POWER ON:#ID#, Bool) ! if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
   					1 #SET_EXTPWR_MAIN_BUS_CONNECTION#
   					0 #SET_EXTPWR_STARTER_CONNECTION#
   					1 #SET_STARTER_MAIN_BUS_CONNECTION#
   				</SET_STATE_0>
   				<SET_STATE_1>
   					(A:EXTERNAL POWER ON:#ID#, Bool) ! if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
   					0 #SET_EXTPWR_MAIN_BUS_CONNECTION#
   					1 #SET_EXTPWR_STARTER_CONNECTION#
   					0 #SET_STARTER_MAIN_BUS_CONNECTION#
   				</SET_STATE_1>
   				<SET_STATE_2>
   					(A:EXTERNAL POWER ON:#ID#, Bool) if{ #ID# (&gt;K:TOGGLE_EXTERNAL_POWER) }
   					0 #SET_EXTPWR_MAIN_BUS_CONNECTION#
   					0 #SET_EXTPWR_STARTER_CONNECTION#
   					1 #SET_STARTER_MAIN_BUS_CONNECTION#
   				</SET_STATE_2>
   				<TOOLTIP_TITLE>@TT_Package.ELECTRICAL_EXTERNAL_POWER_TITLE</TOOLTIP_TITLE>
   				<TOOLTIP_ENTRY_0>ELECTRICAL_#BTN_ID#</TOOLTIP_ENTRY_0>
				<TT_DESCRIPTION_ID>@TT_Package.ELECTRICAL_EXTERNAL_POWER_ACTION_SET</TT_DESCRIPTION_ID>
   				<ON_BEFORE_SET_CODE>#GET_STATE_EXTERNAL# </ON_BEFORE_SET_CODE>
   				<ENUM_VAL_TO_POS_EXTERNAL>(A:EXTERNAL POWER ON:#ID#, Bool) if{ l1 l2 ! and l3 and if{ 0 sp4 g2 } els{ 1 sp4 g2 } } els{ 2 sp4 g2 } :2 l4</ENUM_VAL_TO_POS_EXTERNAL>
   				<SIMVAR_TO_WATCH_0>EXTERNAL POWER ON:#ID#</SIMVAR_TO_WATCH_0>
   			</UseTemplate>
   		</Component>
	</Template>	

	<Template Name="ASOBO_ELECTRICAL_Switch_PropGovTest_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<UseTemplate Name="ASOBO_GT_Push_Button_Held_Simple">
				<LEFT_SINGLE_CODE>
					1 (&gt;L:XMLVAR_Overspeed_Test)
					9200 (&gt;K:PROP_PITCH1_SET)
				</LEFT_SINGLE_CODE>
				<LEFT_LEAVE_CODE>
					0 (&gt;L:XMLVAR_Overspeed_Test)
					0 (&gt;B:ENGINE_Propeller_Lever_Inc)
				</LEFT_LEAVE_CODE>
				<ANIM_CODE>(L:XMLVAR_Overspeed_Test) 100 *</ANIM_CODE>
				<TOOLTIP_TITLE>@TT_Package.EXMOD_PUSH_OVERSPEEDGOVERNOR_TITLE</TOOLTIP_TITLE>
				<TT_DESCRIPTION_ID>@TT_Package.EXMOD_PUSH_OVERSPEEDGOVERNOR_AIR_ACTION</TT_DESCRIPTION_ID>
			</UseTemplate>
		</Component>
	</Template>

	<Template Name="ASOBO_ELECTRICAL_Switch_FireTest_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ELECTRICAL_FireTest</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
				<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>XMLVAR_FireTest_Switch</SWITCH_POSITION_VAR>
			</Parameters>

			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.SAFETY_PUSH_TEST_ACTION</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>
					(L:XMLVAR_FireTest_Switch, enum)
					s0 0 == if{ (R:1:@TT_Package.CESSNAGRANDCARAVANE_TEST_FIREDETECT_TITLE) @sprintf quit }
					l0 1 == if{ (R:1:@TT_Package.GT_STATE_NORMAL) @sprintf quit }
					l0 2 == if{ 'Fuel Selector OFF Announciation' @sprintf quit }
				</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>

            <UseTemplate Name="ASOBO_GT_Switch_3States">
                <MOMENTARY_SWITCH/>
   	            <STATE_MAX_TIMER>0.5</STATE_MAX_TIMER>
       	        <STATE0_TIMER>0.5</STATE0_TIMER>
				<INVERT_ANIM>True</INVERT_ANIM>
				<WWISE_EVENT>testswitch_firedetect_switch_on</WWISE_EVENT>
				<AUDIO_DIRECTION>Both</AUDIO_DIRECTION>
				<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
   	            <TOOLTIP_TITLE>@TT_Package.SAFETY_PUSH_TEST_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_DEICE_Switch_Windshield_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>DEICE_Windshield</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
				<SWITCH_POSITION_TYPE>O</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>Deice_Windshield_Switch</SWITCH_POSITION_VAR>
				<ANIM_EVENT_EFFECT_NAME>CAM_Deice</ANIM_EVENT_EFFECT_NAME>
				<ANIMTIP_0>TT:COCKPIT.TOOLTIPS.C208_DEICE_MAX_FLOW_SET_WINDHIELD</ANIMTIP_0>
				<ANIMTIP_1>TT:COCKPIT.TOOLTIPS.C208_DEICE_MAX_FLOW_SET_AIRFRAME</ANIMTIP_1>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.SWITCH_DEICE_MODE_ACTION</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>
					(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
					s0 0 == if{ (R:1:@TT_Package.EXMOD_GT_STATE_AIRFRAME) quit }
					l0 1 == if{ (R:1:@TT_Package.GT_STATE_OFF) quit }
					l0 2 == if{ (R:1:@TT_Package.EXMOD_GT_STATE_WINDSHIELD) quit }
				</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
    			<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
            <UseTemplate Name="ASOBO_GT_Switch_3States">
                <MOMENTARY_SWITCH/>
   	            <STATE_MAX_TIMER>0.5</STATE_MAX_TIMER>
       	        <STATE0_TIMER>0.5</STATE0_TIMER>
				<INVERT_ANIM>True</INVERT_ANIM>

				<CODE_POS_0>(*  MAXFLOW *) (&gt;B:DEICE_System_Controller_Set_MaxFlow)</CODE_POS_0>
				<CODE_POS_1>(*    OFF   *)</CODE_POS_1>
				<CODE_POS_2>(*WINDSHIELD*) (&gt;B:DEICE_System_Controller_Set_Windshield)</CODE_POS_2>

				<WWISE_PREFIX>deice_windshield</WWISE_PREFIX>
				<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
				<AUDIO_DIRECTION>Both</AUDIO_DIRECTION>

				<TOOLTIP_TITLE>@TT_Package.SWITCH_DEICE_MODE_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_DEICE_Switch_Airframe_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>DEICE_Airframe</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
				<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>XMLVAR_Deice_Airframe</SWITCH_POSITION_VAR>
				<ANIM_EVENT_EFFECT_NAME>CAM_Deice</ANIM_EVENT_EFFECT_NAME>
				<STATE_HIGH>2</STATE_HIGH>
				<STATE_NORM>1</STATE_NORM>
				<STATE_OFF>0</STATE_OFF>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.DEICE_SWITCH_PUMP_ACTION</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>
					(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
					s0 #STATE_HIGH# == if{ (R:1:@TT_Package.GT_STATE_HIGH) quit }
					l0 #STATE_NORM# == if{ (R:1:@TT_Package.GT_STATE_MODENORM) quit }
					l0 #STATE_OFF# == if{ (R:1:@TT_Package.GT_STATE_OFF) quit }
				</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
    			<TT_INTERACTION>PRIMARY_DOWN+Y_AXIS</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>Y_AXIS</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
            <UseTemplate Name="ASOBO_GT_Switch_3States">
				<INVERT_ANIM>True</INVERT_ANIM>
				<INVERT_WHEEL_INTERACTION>True</INVERT_WHEEL_INTERACTION>
				<INVERT_DRAG_POSITIVE_CONDITION>True</INVERT_DRAG_POSITIVE_CONDITION>

				<CODE_POS_0>(*OFF *) #STATE_OFF#  (&gt;B:DEICE_System_Controller_Set)</CODE_POS_0>
				<CODE_POS_1>(*NORM*) #STATE_NORM# (&gt;B:DEICE_System_Controller_Set)</CODE_POS_1>
				<CODE_POS_2>(*HIGH*) #STATE_HIGH# (&gt;B:DEICE_System_Controller_Set)</CODE_POS_2>

				<WWISE_EVENT>deice_airframe_switch</WWISE_EVENT>
				<NORMALIZED_TIME>0.1</NORMALIZED_TIME>
				<AUDIO_DIRECTION>Both</AUDIO_DIRECTION>

				<TOOLTIP_TITLE>@TT_Package.DEICE_SWITCH_PUMP_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_DEICE_Switch_Backup_Template_Mod">
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>DEICE_Backup</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.DEICE_SWITCH_ANTIICE_BACKUP_ACTION_SET</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(L:XMLVAR_Deice_Backup_Switch) 1 == if{ @TT_On } els{ @TT_Off }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_CODE>(L:XMLVAR_Deice_Backup_Switch) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>(&gt;B:DEICE_System_Controller_Backup_Toggle)</LEFT_SINGLE_CODE>
   	            <TOOLTIP_TITLE>@TT_Package.DEICE_SWITCH_ANTIICE_BACKUP_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>		
	</Template>	

	<Template Name="ASOBO_DEICE_Switch_Stall_Heat_Template_Mod">
		<Parameters Type="Default">
			<CIRCUIT_DEICE_STALL_HEATER>56</CIRCUIT_DEICE_STALL_HEATER>
		</Parameters>
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>DEICE_Stall_Heat</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>
					(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_STALL_HEATER#, bool) if{ #CIRCUIT_DEICE_STALL_HEATER# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
				</UPDATE_CODE>
			</UseTemplate>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.DEICE_SWITCH_ANTIICE_STALLHEAT_ACTION_SET</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(L:XMLVAR_Deice_Stall_Heat_Switch) 1 == if{ @TT_On } els{ @TT_Off }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_CODE>(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_STALL_HEATER#, bool) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>
					(L:XMLVAR_Deice_Stall_Heat_Switch) ! d (&gt;L:XMLVAR_Deice_Stall_Heat_Switch)
					(A:CIRCUIT SWITCH ON:#CIRCUIT_DEICE_STALL_HEATER#, bool) != if{ #CIRCUIT_DEICE_STALL_HEATER# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
				</LEFT_SINGLE_CODE>
   	            <TOOLTIP_TITLE>@TT_Package.DEICE_SWITCH_ANTIICE_STALLHEAT_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>		
	</Template>	


	<Template Name="ASOBO_LIGHTING_Switch_Template_Mod">
		<Parameters Type="Default">
			<SIMVAR_INDEX>1</SIMVAR_INDEX>

			<KEY_ID_SET>#LIGHT_TYPE#_LIGHTS_SET</KEY_ID_SET>
			<KEY_ID_ON>#LIGHT_TYPE#_LIGHTS_ON</KEY_ID_ON>
			<KEY_ID_OFF>#LIGHT_TYPE#_LIGHTS_OFF</KEY_ID_OFF>
			<KEY_ID_TOGGLE>TOGGLE_#LIGHT_TYPE#_LIGHTS</KEY_ID_TOGGLE>
			
			<Switch Param="LIGHT_TYPE">
				<Case Value="STROBE">
					<KEY_ID_SET>STROBES_SET</KEY_ID_SET>
					<KEY_ID_ON>STROBES_ON</KEY_ID_ON>
					<KEY_ID_OFF>STROBES_OFF</KEY_ID_OFF>
					<KEY_ID_TOGGLE>STROBES_TOGGLE</KEY_ID_TOGGLE>
				</Case>
				<Case Value="LANDING">
					<KEY_ID_TOGGLE>LANDING_LIGHTS_TOGGLE</KEY_ID_TOGGLE>
				</Case>
			</Switch>
		</Parameters>
	
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>ELECTRICAL_Lighting</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>#LIGHT_TYPE#_#SIMVAR_INDEX#</IE_NAME>
				<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
				<SWITCH_POSITION_VAR>XMLVAR_Lighting_Switch_#LIGHT_TYPE#_#SIMVAR_INDEX#</SWITCH_POSITION_VAR>
			</Parameters>
	
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION_IS_DYNAMIC>True</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(B:#LIGHT_INPUT_EVENT_ID#) 1 == if{ @TT_On } els{ @TT_Off }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
			</UseInputEvent>
	
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_NAME>#NODE_ID#</ANIM_NAME>
				<ANIM_CODE>(B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#, bool) 100 *</ANIM_CODE>
				<LEFT_SINGLE_CODE>(&gt;B:#INPUT_EVENT_ID_SOURCE#_#IE_NAME#_Toggle)</LEFT_SINGLE_CODE>

				<WWISE_EVENT_1>#LIGHT_TYPE#_light_SWITCH_on</WWISE_EVENT_1>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>#LIGHT_TYPE#_light_SWITCH_off</WWISE_EVENT_2>
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>
	</Template>	

	<Template Name="ASOBO_LIGHTING_Knob_Template_Mod">
		<Parameters Type="Default">
			<ANIMTIP_0_ON_CURSOR>TurnLeft</ANIMTIP_0_ON_CURSOR>
			<ANIMTIP_1_ON_CURSOR>TurnRight</ANIMTIP_1_ON_CURSOR>
			<WWISE_EVENT>lighting_knob_generic</WWISE_EVENT>
		</Parameters>
		<Parameters Type="Override">
			<Condition Check="KNOB_LOCAL_VAR">
				<True>
					<INIT_CODE>
						(L:#KNOB_LOCAL_VAR#, percent) s0 #POTENTIOMETER# (&gt;K:2:LIGHT_POTENTIOMETER_SET)
					</INIT_CODE>
					<SAVE_CODE>	(&gt;L:#KNOB_LOCAL_VAR#, percent) </SAVE_CODE>
				</True>
				<False>
		            <INIT_CODE>
						(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, percent) sp0
					</INIT_CODE>
					<SAVE_CODE>	p </SAVE_CODE>
				</False>
			</Condition>
		</Parameters>
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
			<Loop>
				<Setup>
					<Param>CUR_ID</Param>
					<From>0</From>
					<Inc>1</Inc>
					<While><Arg NotEmpty="CIRCUIT_NO#CUR_ID#"/></While>
				</Setup>
				<Do>
					<Parameters Type="Default" Lifetime="Loop">
						<INIT_CODE_T/>
						<CLOCKWISE_CODE_T/>
						<ANTICLOCKWISE_CODE_T/>
					</Parameters>
					<Parameters Type="Override" Lifetime="Loop">
						<CURRENT_CIRCUIT Process="Param">CIRCUIT_NO#CUR_ID#</CURRENT_CIRCUIT>
					</Parameters>
					<Parameters Type="Override" Lifetime="Loop">
						<CLOCKWISE_CODE_T>
							#CLOCKWISE_CODE_T#
							d #CURRENT_CIRCUIT# (&gt;K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
						</CLOCKWISE_CODE_T>
						<ANTICLOCKWISE_CODE_T>
							#ANTICLOCKWISE_CODE_T#
							d #CURRENT_CIRCUIT# (&gt;K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
						</ANTICLOCKWISE_CODE_T>
						<INIT_CODE_T>
							#INIT_CODE_T# l0 #CURRENT_CIRCUIT# (&gt;K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
						</INIT_CODE_T>
					</Parameters>
					<Parameters Type="Override" Lifetime="Loop">
						<Switch Param="CIRCUIT_INTERACTION">
							<Case Value="ALWAYS_ENABLED">
								<CLOCKWISE_CODE_T>
									#CLOCKWISE_CODE_T#
									(A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) ! if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</CLOCKWISE_CODE_T>
								<ANTICLOCKWISE_CODE_T>
									#ANTICLOCKWISE_CODE_T#
									(A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) ! if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</ANTICLOCKWISE_CODE_T>
								<INIT_CODE_T>
									#INIT_CODE_T# (A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) ! if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</INIT_CODE_T>
							</Case>
							<Case Value="ENABLE_DISABLE">
								<CLOCKWISE_CODE_T>
									#CLOCKWISE_CODE_T#
									(A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) ! if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</CLOCKWISE_CODE_T>
								<ANTICLOCKWISE_CODE_T>
									#ANTICLOCKWISE_CODE_T#
									d ! (A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) and if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</ANTICLOCKWISE_CODE_T>
								<INIT_CODE_T>
									#INIT_CODE_T# 
									(A:CIRCUIT SWITCH ON:#CURRENT_CIRCUIT#,Bool) s1 l0 ! and l0 l1 ! and or
									if{ #CURRENT_CIRCUIT# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }
								</INIT_CODE_T>
							</Case>
						</Switch>
					</Parameters>
				</Do>
				<Then>
					<INIT_CODE>
						#INIT_CODE# #INIT_CODE_T#
					</INIT_CODE>
					<CLOCKWISE_CODE>
						(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, percent) #KNOB_TURN_SPEED# + 100 min d #POTENTIOMETER# (&gt;K:2:LIGHT_POTENTIOMETER_SET) 
						#CLOCKWISE_CODE_T# #SAVE_CODE#
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, percent) #KNOB_TURN_SPEED# - 0 max d #POTENTIOMETER# (&gt;K:2:LIGHT_POTENTIOMETER_SET)
						#ANTICLOCKWISE_CODE_T# #SAVE_CODE#
					</ANTICLOCKWISE_CODE>
				</Then>
			</Loop>
			</Parameters>

			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>#INIT_CODE#</UPDATE_CODE>
			</UseTemplate>

			<UseTemplate Name="ASOBO_GT_Knob_Finite_Code">
				<COUNT>10</COUNT> 
				<ANIM_CODE>(A:LIGHT POTENTIOMETER:#POTENTIOMETER#, percent)</ANIM_CODE>
			</UseTemplate>
		</Component>
	</Template>

	<Template Name="ASOBO_FUEL_Switch_Cutoff_Template_Mod">
		<Parameters Type="Default">
			<CONDITION_LEVER>True</CONDITION_LEVER>
		</Parameters>
		<Component ID="#PART_ID#" Node="#NODE_ID#">
			<Parameters Type="Override">
				<INPUT_EVENT_ID_SOURCE>FUEL_Cutoff</INPUT_EVENT_ID_SOURCE>
				<IE_NAME>Switch</IE_NAME>
			</Parameters>
			<UseTemplate Name="ASOBO_GT_Update">
				<UPDATE_ONCE>True</UPDATE_ONCE>
				<UPDATE_CODE>
					(A:GENERAL ENG FUEL VALVE:1, Bool) 0 != (L:Condition_Lever_CutOff_1) 0 != and if{ 1 (&gt;L:ENG FUEL VALVE:1) }
				</UPDATE_CODE>
			</UseTemplate>
			<UseInputEvent ID="CESSNA_MOD">
				<TT_DESCRIPTION>@TT_Package.FUEL_SWITCH_OPENCLOSED_ACTION_SET</TT_DESCRIPTION>
				<TT_DESCRIPTION_IS_DYNAMIC>False</TT_DESCRIPTION_IS_DYNAMIC>
				<TT_VALUE>(L:ENG FUEL VALVE:1) == if{ @TT_Off } els{ @TT_On }</TT_VALUE>
				<TT_VALUE_IS_DYNAMIC>True</TT_VALUE_IS_DYNAMIC>
				<TT_INTERACTION>PRIMARY_DOWN</TT_INTERACTION>
				<TT_INTERACTION_LOCKABLE>LOCK</TT_INTERACTION_LOCKABLE>
				<TT_ICON>MOVE_Y</TT_ICON>
			</UseInputEvent>
			<UseTemplate Name="ASOBO_GT_Switch_Code">
				<ANIM_CODE>(L:ENG FUEL VALVE:1, bool) 100 *</ANIM_CODE>

				<LEFT_SINGLE_CODE>
					(L:ENG FUEL VALVE:1, Bool) ! d (&gt;L:ENG FUEL VALVE:1, Bool) (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (&gt;K:TOGGLE_FUEL_VALVE_ENG1) }
				</LEFT_SINGLE_CODE>

				<WWISE_EVENT_1>fuel_cutoff_switch_on</WWISE_EVENT_1>
				<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
				<WWISE_EVENT_2>fuel_cutoff_switch_off</WWISE_EVENT_2>
				<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>

				<TOOLTIP_TITLE>@TT_Package.FUEL_SWITCH_OPENCLOSED_TITLE</TOOLTIP_TITLE>
				<TOOLTIP_ENTRY_0>#INPUT_EVENT_ID_SOURCE#_#IE_NAME#</TOOLTIP_ENTRY_0>
			</UseTemplate>
		</Component>		
	</Template>	

</ModelBehaviors>